# meta effects used to push the results of converting the pdxvar "temp_bitwise_input" (when multiplied by 1000) to its bitwise format to an array specified by "temp_array_[?temp_array_id]"
# Note that this overrides any values currently in the array and temp_array_id *must* be a whole number and a regular paradox variable
to_bitwise = {
    set_temp_variable = { bitwise_to_process = temp_bitwise_input }
    meta_effect = {
        text = {
            clear_temp_array = [ARRAY_NAME]
            resize_temp_array = { [ARRAY_NAME] = 32 }
            
            # Checks if temp bitwise is negative, if so, flip sign bit and prepare for remaining conversion
            if = {
                limit = {
                    check_variable = { bitwise_to_process < 0 }
                }
                set_temp_variable = { [ARRAY_NAME]^0 = 1 }
                add_to_temp_variable = { bitwise_to_process = 2147483.648 }
            }

            # convert bitwise_to_process to remaining 31 bits
            set_temp_variable = { bit_compare = 1073741.824 }
            for_loop_effect = {
                start = 1
                end = 32
                compare = less_than
                value = idx
                
                if = {
                    limit = {
                        check_variable = {
                            var = bitwise_to_process
                            value = bit_compare
                            compare = greater_than_or_equals
                        }
                    }

                    set_temp_variable = { [ARRAY_NAME]^idx = 1 }
                    subtract_from_temp_variable = { bitwise_to_process = bit_compare }
                }
                divide_temp_variable = { bit_compare = 2 }
            }
        }
        ARRAY_NAME = "temp_array_[?temp_array_id]"
    }
}
test_bitwise = {
    resize_temp_array = { bitwise_a = 56 }
    resize_temp_array = { bitwise_b = 128 }
    print_bitwise = yes
}
print_bitwise = {
    set_temp_variable = { bitwise_a^1 = 1 }
    set_temp_variable = { bitwise_a^6 = 1 }
    set_temp_variable = { bitwise_a^8 = 1 }
    set_temp_variable = { bitwise_a^10 = 1 }
    set_temp_variable = { bitwise_a^11 = 1 }
    set_temp_variable = { bitwise_a^15 = 1 }
    set_temp_variable = { bitwise_a^19 = 1 }
    set_temp_variable = { bitwise_a^21 = 1 }
    set_temp_variable = { bitwise_a^22 = 1 }
    set_temp_variable = { bitwise_a^23 = 1 }
    set_temp_variable = { bitwise_a^31 = 1 }

    log = "A:"
    for_each_loop = {
        array = bitwise_a
        value = v
        index = i

        add_to_temp_array = { to_print_array = v }
    }
    log = "[debug_print_array]"

    log = "B:"
    for_each_loop = {
        array = bitwise_b
        value = v
        index = i

        add_to_temp_array = { to_print_array = v }
    }
    log = "[debug_print_array]"
}
test = {
    set_temp_variable = { temp_bitwise_input = 1.044 }
    add_to_temp_variable = { temp_bitwise_input = -2147483.648 }
    log = "[?temp_bitwise_input]"
    set_temp_variable = { temp_array_id = 22 }
    to_bitwise = yes
    for_each_loop = {
        array = temp_array_22
        value = v
        index = i

        add_to_temp_array = { to_print_array = v }
    }
    log = "[debug_print_array]"
}