# meta effects used to push the results of converting the pdxvar "temp_bitwise_input" (when multiplied by 1000) to its bitwise format to an array specified by "temp_array_[?temp_array_id]"
# Note that this overrides any values currently in the array and that temp_array_id *must* be a whole number and a regular paradox variable
to_bitwise = {
    set_temp_variable = { bitwise_to_process = temp_bitwise_input }
    meta_effect = {
        text = {
            clear_temp_array = [ARRAY_NAME]
            resize_temp_array = { [ARRAY_NAME] = 32 }
            
            # Checks if temp bitwise is negative, if so, flip sign bit and prepare for remaining conversion
            if = {
                limit = {
                    check_variable = { bitwise_to_process < 0 }
                }
                set_temp_variable = { [ARRAY_NAME]^0 = 1 }
                add_to_temp_variable = { bitwise_to_process = 2147483.648 }
            }

            # convert bitwise_to_process to remaining 31 bits
            set_temp_variable = { bit_compare = 1073741.824 }
            for_loop_effect = {
                start = 1
                end = 32
                compare = less_than
                value = idx
                
                if = {
                    limit = {
                        check_variable = {
                            var = bitwise_to_process
                            value = bit_compare
                            compare = greater_than_or_equals
                        }
                    }

                    set_temp_variable = { [ARRAY_NAME]^idx = 1 }
                    subtract_from_temp_variable = { bitwise_to_process = bit_compare }
                }
                divide_temp_variable = { bit_compare = 2 }
            }
        }
        ARRAY_NAME = "temp_array_[?temp_array_id]"
    }
}
# Run all tests defined in common/scripted_effects/ieee_tests.txt
ieee_run_tests = {
    ieee_get_test_count = yes
    clear_temp_array = test_fail_array
    for_each_loop = {
        array = temp_test_count_array
        value = test_count
        index = test_block

        for_loop_effect = {
            start = 0
            end = test_count
            compare = less_than
            value = test_offset

            set_temp_variable = { test_id = test_block }
            multiply_temp_variable = { test_id = 1000 }
            add_to_temp_variable = { test_id = test_offset }

            meta_effect = {
                text = {
                    ieee_test_[TEST_ID] = yes
                }
                TEST_ID = "[?test_id]"
            }
        }
    }
    for_each_loop = {
        array = test_fail_array
        value = v

        add_to_temp_array = { to_print_array = v }
    }
    log = "Failed Tests: [debug_print_array]"
}