# Run all tests defined below
ieee_run_tests = {
    ieee_get_test_count = yes
    clear_temp_array = test_fail_array
    for_each_loop = {
        array = temp_test_count_array
        value = test_count
        index = test_block

        for_loop_effect = {
            start = 0
            end = test_count
            compare = less_than
            value = test_offset

            set_temp_variable = { test_id = test_block }
            multiply_temp_variable = { test_id = 1000 }
            add_to_temp_variable = { test_id = test_offset }

            meta_effect = {
                text = {
                    ieee_test_[TEST_ID] = yes
                }
                TEST_ID = "[?test_id]"
            }
        }
    }
    for_each_loop = {
        array = test_fail_array
        value = v

        add_to_temp_array = { to_print_array = v }
    }
    if = {
        limit = {
            check_variable = { test_fail_array^num < 100 }
        }
        log = "------------------------------------------------------------"
        log = "<[?test_fail_array^num]> Failed Test(s): [debug_print_array]"
        log = "------------------------------------------------------------"
    }
    else = {
        log = "------------------------------------------------------------"
        log = "<[?test_fail_array^num]> Failed Test(s)"
        log = "------------------------------------------------------------"
    }
}

######### TESTS #########
# Test output to game.log should be in the format:
# Test [?test_id] - WHAT IS BEING TESTED - PASS/FAIL
# Any additional test information below

# Furthermore, in the fail block add the line `add_to_temp_array = { test_fail_array = test_id }` to add the failure to a list printed at the end
# Error flags (e.g. io_error_flag) are temp variables that mark errors.

# Hard code the number of tests, each test block is separated by 1000, so it goes 0### block, 1### block, etc, with tests filling in the 000-999 range
ieee_get_test_count = {
    add_to_temp_array = { temp_test_count_array = 792 }      # to_bitwise and store_bitwise
    add_to_temp_array = { temp_test_count_array = 500 }     # relations and totalOrder
    add_to_temp_array = { temp_test_count_array = 972 }     # predicates
    add_to_temp_array = { temp_test_count_array = 1000 }    # signaling predicates
    add_to_temp_array = { temp_test_count_array = 422 }     # addition and subtraction
    add_to_temp_array = { temp_test_count_array = 961 }     # multiplication
    add_to_temp_array = { temp_test_count_array = 961 }     # division
}
# test basic io
## See ieee_tests_io.txt
# test base relations and totalOrder
## See ieee_tests_relations.txt and ieee_tests_totalorder.txt
# test quiet predicates and negations
## See ieee_tests_predicates.txt
# test signaling predicates and negations
## See ieee_tests_signaling_predicates.txt
# test addition and subtration
## See ieee_tests_addsub.txt
# test multiplication
## See ieee_tests_mult.txt
# test division
## See ieee_tests_div.txt
