# Run all tests defined below
ieee_run_tests = {
    ieee_get_test_count = yes
    clear_temp_array = test_fail_array
    for_each_loop = {
        array = temp_test_count_array
        value = test_count
        index = test_block

        for_loop_effect = {
            start = 0
            end = test_count
            compare = less_than
            value = test_offset

            set_temp_variable = { test_id = test_block }
            multiply_temp_variable = { test_id = 1000 }
            add_to_temp_variable = { test_id = test_offset }

            meta_effect = {
                text = {
                    ieee_test_[TEST_ID] = yes
                }
                TEST_ID = "[?test_id]"
            }
        }
    }
    for_each_loop = {
        array = test_fail_array
        value = v

        add_to_temp_array = { to_print_array = v }
    }
    log = "------------------------"
    log = "Failed Test(s): [debug_print_array]"
    log = "------------------------"
}

######### TESTS #########
# Test output to game.log should be in the format:
# Test [?test_id] - WHAT IS BEING TESTED - PASS/FAIL
# Any additional test information below

# Furthermore, in the fail block add the line `add_to_temp_array = { test_fail_array = test_id }` to add the failure to a list printed at the end
# Error flags (e.g. bitwise_error_flag) are temp variables that mark errors. Currently I don't think it would be feasible to implement a complete fail-fast system (too many if statements), but 

# Hard code the number of tests, each test block is separated by 1000, so it goes 0### block, 1### block, etc, with tests filling in the 000-999 range
ieee_get_test_count = {
    add_to_temp_array = { temp_test_count_array = 12 } # to_bitwise and store_bitwise
    add_to_temp_array = { temp_test_count_array = 15 } # bitwise 
    add_to_temp_array = { temp_test_count_array = 8 } # array manip(append, copy, reverse array)
    add_to_temp_array = { temp_test_count_array = 11 } # to_float
}
## test to_bitwise and store_bitwise functions
ieee_test_0 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    
    set_temp_variable = { to_bitwise_input = 0 }
    set_temp_variable = { temp_array_id = 0 }
    to_bitwise = yes

    # correct array should be all zeroes
    clear_temp_array = temp_array_1
    resize_temp_array = { temp_array_1 = 32 }

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { bitwise_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = {
                check_variable = { temp_array_0^num = temp_array_1^num }
            }
        }
        set_temp_variable = { invalid = 1 }
    }
    for_loop_effect = {
        start = 0
        end = 32
        compare = less_than
        value = idx

        if = {
            limit = {
                NOT = { check_variable = { temp_array_0^idx = temp_array_1^idx } }
            }
            set_temp_variable = { invalid = 1 }
        }
    }

    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - zero to_bitwise - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - zero to_bitwise - PASS"
    }
    set_temp_variable = { temp_array_id = 0 }
    log = "Actual: [debug_print_array_id]"
    set_temp_variable = { temp_array_id = 1 }
    log = "Expect: [debug_print_array_id]"
    
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
}
ieee_test_1 = {
    set_temp_variable = { to_bitwise_input = -2147483.648 }
    set_temp_variable = { temp_array_id = 0 }
    to_bitwise = yes

    # correct array should be a 1 in the first bit then all zeroes
    clear_temp_array = temp_array_1
    resize_temp_array = { temp_array_1 = 32 }
    set_temp_variable = { temp_array_1^0 = 1 }

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { bitwise_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = {
                check_variable = { temp_array_0^num = temp_array_1^num }
            }
        }
        set_temp_variable = { invalid = 1 }
    }
    for_loop_effect = {
        start = 0
        end = 32
        compare = less_than
        value = idx

        if = {
            limit = {
                NOT = { check_variable = { temp_array_0^idx = temp_array_1^idx } }
            }
            set_temp_variable = { invalid = 1 }
        }
    }

    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - min_num to_bitwise - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - min_num to_bitwise - PASS"
    }
    set_temp_variable = { temp_array_id = 0 }
    log = "Actual: [debug_print_array_id]"
    set_temp_variable = { temp_array_id = 1 }
    log = "Expect: [debug_print_array_id]"
    
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
}
ieee_test_2 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    
    set_temp_variable = { to_bitwise_input = 2147483.647 }
    set_temp_variable = { temp_array_id = 0 }
    to_bitwise = yes

    # correct array should be all 1s except for first bit
    clear_temp_array = temp_array_1
    resize_temp_array = {
        array = temp_array_1
        value = 1
        size = 32
    }
    set_temp_variable = { temp_array_1^0 = 0 }

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { bitwise_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = {
                check_variable = { temp_array_0^num = temp_array_1^num }
            }
        }
        set_temp_variable = { invalid = 1 }
    }
    for_loop_effect = {
        start = 0
        end = 32
        compare = less_than
        value = idx

        if = {
            limit = {
                NOT = { check_variable = { temp_array_0^idx = temp_array_1^idx } }
            }
            set_temp_variable = { invalid = 1 }
        }
    }

    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - max_num to_bitwise - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - max_num to_bitwise - PASS"
    }
    set_temp_variable = { temp_array_id = 0 }
    log = "Actual: [debug_print_array_id]"
    set_temp_variable = { temp_array_id = 1 }
    log = "Expect: [debug_print_array_id]"
    
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
}
ieee_test_3 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    
    set_temp_variable = { to_bitwise_input = 0.105 }
    set_temp_variable = { temp_array_id = 0 }
    to_bitwise = yes

    # correct array should be the result of converting 105 to binary as usual
    clear_temp_array = temp_array_1
    resize_temp_array = { temp_array_1 = 32 }
    set_temp_variable = { temp_array_1^25 = 1 }
    set_temp_variable = { temp_array_1^26 = 1 }
    set_temp_variable = { temp_array_1^28 = 1 }
    set_temp_variable = { temp_array_1^31 = 1 }

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { bitwise_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = {
                check_variable = { temp_array_0^num = temp_array_1^num }
            }
        }
        set_temp_variable = { invalid = 1 }
    }
    for_loop_effect = {
        start = 0
        end = 32
        compare = less_than
        value = idx

        if = {
            limit = {
                NOT = { check_variable = { temp_array_0^idx = temp_array_1^idx } }
            }
            set_temp_variable = { invalid = 1 }
        }
    }

    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - positive to_bitwise - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - positive to_bitwise - PASS"
    }
    set_temp_variable = { temp_array_id = 0 }
    log = "Actual: [debug_print_array_id]"
    set_temp_variable = { temp_array_id = 1 }
    log = "Expect: [debug_print_array_id]"
    
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
}
ieee_test_4 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    
    set_temp_variable = { to_bitwise_input = -0.105 }
    set_temp_variable = { temp_array_id = 0 }
    to_bitwise = yes

    # correct array should be the result of converting -105 to binary in 32-bit two's complement
    clear_temp_array = temp_array_1
    resize_temp_array = { 
        array = temp_array_1 
        value = 1
        size = 32 
    }
    set_temp_variable = { temp_array_1^25 = 0 }
    set_temp_variable = { temp_array_1^26 = 0 }
    set_temp_variable = { temp_array_1^28 = 0 }

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { bitwise_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = {
                check_variable = { temp_array_0^num = temp_array_1^num }
            }
        }
        set_temp_variable = { invalid = 1 }
    }
    for_loop_effect = {
        start = 0
        end = 32
        compare = less_than
        value = idx

        if = {
            limit = {
                NOT = { check_variable = { temp_array_0^idx = temp_array_1^idx } }
            }
            set_temp_variable = { invalid = 1 }
        }
    }

    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - negative to_bitwise - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - negative to_bitwise - PASS"
    }
    set_temp_variable = { temp_array_id = 0 }
    log = "Actual: [debug_print_array_id]"
    set_temp_variable = { temp_array_id = 1 }
    log = "Expect: [debug_print_array_id]"
    
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
}
ieee_test_5 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    
    set_temp_variable = { to_bitwise_input = 12.312 }
    set_temp_variable = { temp_array_id = 0.002 }
    to_bitwise = yes

    # correct result is an error message from non-integer
    clear_temp_array = temp_array_1

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            NOT = { check_variable = { bitwise_error_flag = 1 } }
        }
        log = "Test [?test_id] - error to_bitwise - FAIL"
        log = "Expected 1 error, got [?bitwise_error_flag]"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - error to_bitwise - PASS"
    }

    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
}
ieee_test_6 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0

    resize_temp_array = { temp_array_0 = 32 }
    set_temp_variable = { temp_array_0^1 = 1 }
    set_temp_variable = { temp_array_0^25 = 1 }
    set_temp_variable = { temp_array_0^26 = 1 }
    set_temp_variable = { temp_array_0^29 = 1 }
    set_temp_variable = { temp_array_0^31 = 1 }

    set_temp_variable = { temp_array_id = 0 }
    store_bitwise = yes

    # correct array should be the value below
    set_temp_variable = { correct = 1073741.925 }

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { bitwise_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = { check_variable = { store_bitwise_output = correct } }
        }
        set_temp_variable = { invalid = 1 }
    }

    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - positive store_bitwise - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - positive store_bitwise - PASS"
    }
    log = "Actual: [?store_bitwise_output]"
    log = "Expect: [?correct]"
    
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
}
ieee_test_7 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0

    resize_temp_array = { temp_array_0 = 32 }
    set_temp_variable = { temp_array_0^0 = 1 }
    set_temp_variable = { temp_array_0^25 = 1 }
    set_temp_variable = { temp_array_0^26 = 1 }
    set_temp_variable = { temp_array_0^29 = 1 }
    set_temp_variable = { temp_array_0^31 = 1 }

    set_temp_variable = { temp_array_id = 0 }
    store_bitwise = yes

    # correct array should be the value below
    set_temp_variable = { correct = -2147483.547 }

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { bitwise_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = { check_variable = { store_bitwise_output = correct } }
        }
        set_temp_variable = { invalid = 1 }
    }

    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - negative store_bitwise - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - negative store_bitwise - PASS"
    }
    log = "Actual: [?store_bitwise_output]"
    log = "Expect: [?correct]"
    
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
}
ieee_test_8 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0

    resize_temp_array = { temp_array_0 = 32 }

    set_temp_variable = { temp_array_id = 0 }
    store_bitwise = yes

    # correct array should be the value below
    set_temp_variable = { correct = 0 }

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { bitwise_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = { check_variable = { store_bitwise_output = correct } }
        }
        set_temp_variable = { invalid = 1 }
    }

    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - zero store_bitwise - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - zero store_bitwise - PASS"
    }
    log = "Actual: [?store_bitwise_output]"
    log = "Expect: [?correct]"
    
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
}
ieee_test_9 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0

    resize_temp_array = { temp_array_0 = 32 }
    set_temp_variable = { temp_array_0^0 = 1 }

    set_temp_variable = { temp_array_id = 0 }
    store_bitwise = yes

    # correct array should be the value below
    set_temp_variable = { correct = -2147483.648 }

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { bitwise_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = { check_variable = { store_bitwise_output = correct } }
        }
        set_temp_variable = { invalid = 1 }
    }

    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - min_num store_bitwise - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - min_num store_bitwise - PASS"
    }
    log = "Actual: [?store_bitwise_output]"
    log = "Expect: [?correct]"
    
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
}
ieee_test_10 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    
    set_temp_variable = { temp_array_id = 0.001 }
    store_bitwise = yes

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            NOT = { check_variable = { bitwise_error_flag = 2 } }
        }
        log = "Test [?test_id] - array_id error store_bitwise - FAIL"
        log = "Expected 2 errors, got [?bitwise_error_flag]"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - array_id error store_bitwise - PASS"
    }

    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
}
ieee_test_11 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    
    resize_temp_array = { temp_array_0 = 33 }
    set_temp_variable = { temp_array_0^0 = 2 }
    set_temp_variable = { temp_array_0^31 = -1 }
    
    set_temp_variable = { temp_array_id = 0.001 }
    store_bitwise = yes

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            NOT = { check_variable = { bitwise_error_flag = 2 } }
        }
        log = "Test [?test_id] - errors store_bitwise - FAIL"
        log = "Expected 2 errors, got [?bitwise_error_flag]"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - errors store_bitwise - PASS"
    }

    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
}
## test bitwise functions
ieee_test_1000 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
    clear_temp_array = temp_array_3
    
    # Run function
    resize_temp_array = { temp_array_0 = 4 }
    set_temp_variable = { temp_array_0^0 = 1 }
    set_temp_variable = { temp_array_0^1 = 1 }
    resize_temp_array = { temp_array_1 = 4 }
    set_temp_variable = { temp_array_1^0 = 1 }
    set_temp_variable = { temp_array_1^2 = 1 }

    set_temp_variable = { temp_array_a_id = 0 }
    set_temp_variable = { temp_array_b_id = 1 }
    set_temp_variable = { temp_array_output_id = 2 }
    and_bitwise = yes

    # Create expected array
    resize_temp_array = { temp_array_3 = 4 }
    set_temp_variable = { temp_array_3^0 = 1 }

    # Run checks
    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { bitwise_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = {
                check_variable = { temp_array_2^num = 4 }
            }
        }
        set_temp_variable = { invalid = 1 }
    }
    for_loop_effect = {
        start = 0
        end = 32
        compare = less_than
        value = idx

        if = {
            limit = {
                NOT = { check_variable = { temp_array_2^idx = temp_array_3^idx } }
            }
            set_temp_variable = { invalid = 1 }
        }
    }

    # Log result
    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - basic and_bitwise - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - basic and_bitwise - PASS"
    }
    set_temp_variable = { temp_array_id = 2 }
    log = "Actual: [debug_print_array_id]"
    set_temp_variable = { temp_array_id = 3 }
    log = "Expect: [debug_print_array_id]"
    
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
    clear_temp_array = temp_array_3
}
ieee_test_1001 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
    clear_temp_array = temp_array_3
    
    # Run function
    resize_temp_array = { temp_array_0 = 3 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    resize_temp_array = { temp_array_1 = 1 }
    add_to_temp_array = { temp_array_1 = 1 }
    add_to_temp_array = { temp_array_1 = 1 }
    add_to_temp_array = { temp_array_1 = 0 }
    add_to_temp_array = { temp_array_1 = 0 }

    set_temp_variable = { temp_array_a_id = 0 }
    set_temp_variable = { temp_array_b_id = 1 }
    set_temp_variable = { temp_array_a_offset = 3 }
    set_temp_variable = { temp_array_b_offset = 1 }
    set_temp_variable = { temp_array_output_id = 2 }
    and_bitwise = yes

    # Create expected array
    resize_temp_array = { temp_array_3 = 4 }
    set_temp_variable = { temp_array_3^0 = 1 }

    # Run checks
    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { bitwise_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = {
                check_variable = { temp_array_2^num = 4 }
            }
        }
        set_temp_variable = { invalid = 1 }
    }
    for_loop_effect = {
        start = 0
        end = 32
        compare = less_than
        value = idx

        if = {
            limit = {
                NOT = { check_variable = { temp_array_2^idx = temp_array_3^idx } }
            }
            set_temp_variable = { invalid = 1 }
        }
    }

    # Log result
    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - offset and_bitwise - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - offset and_bitwise - PASS"
    }
    set_temp_variable = { temp_array_id = 2 }
    log = "Actual: [debug_print_array_id]"
    set_temp_variable = { temp_array_id = 3 }
    log = "Expect: [debug_print_array_id]"
    
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
    clear_temp_array = temp_array_3
}
ieee_test_1002 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
    
    # Run function
    resize_temp_array = { temp_array_0 = 6 }
    resize_temp_array = { temp_array_1 = 1 }

    set_temp_variable = { temp_array_a_id = 2 }
    set_temp_variable = { temp_array_b_id = 1.001 }
    set_temp_variable = { temp_array_a_offset = 2 }
    set_temp_variable = { temp_array_b_offset = 3 }
    set_temp_variable = { temp_array_output_id = 2 }
    and_bitwise = yes

    # Run checks
    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            NOT = { check_variable = { bitwise_error_flag = 4 } }
        }
        set_temp_variable = { invalid = 1 }
    }

    # Log result
    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - errors and_bitwise - FAIL"
        log = "Expected 4 errors, got [?bitwise_error_flag]"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - errors and_bitwise - PASS"
    }

    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
}
ieee_test_1003 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
    
    # Run function
    resize_temp_array = { temp_array_0 = 6 }
    resize_temp_array = { temp_array_1 = 6 }

    set_temp_variable = { temp_array_a_id = 0 }
    set_temp_variable = { temp_array_b_id = 1 }
    set_temp_variable = { temp_array_a_offset = 0 }
    set_temp_variable = { temp_array_b_offset = 0 }
    set_temp_variable = { temp_array_output_id = 2 }
    add_to_temp_array = { temp_array_0 = 2 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_1 = 1 }
    add_to_temp_array = { temp_array_1 = -1 }
    and_bitwise = yes

    # Run checks
    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            NOT = { check_variable = { bitwise_error_flag = 2 } }
        }
        set_temp_variable = { invalid = 1 }
    }

    # Log result
    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - value errors and_bitwise - FAIL"
        log = "Expected 2 errors, got [?bitwise_error_flag]"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - errors and_bitwise - PASS"
    }

    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
}
ieee_test_1004 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
    clear_temp_array = temp_array_3
    
    # Run function
    resize_temp_array = { temp_array_0 = 4 }
    set_temp_variable = { temp_array_0^0 = 1 }
    set_temp_variable = { temp_array_0^1 = 1 }
    resize_temp_array = { temp_array_1 = 4 }
    set_temp_variable = { temp_array_1^0 = 1 }
    set_temp_variable = { temp_array_1^2 = 1 }

    set_temp_variable = { temp_array_a_id = 0 }
    set_temp_variable = { temp_array_b_id = 1 }
    set_temp_variable = { temp_array_output_id = 2 }
    or_bitwise = yes

    # Create expected array
    resize_temp_array = { temp_array_3 = 4 }
    set_temp_variable = { temp_array_3^0 = 1 }
    set_temp_variable = { temp_array_3^1 = 1 }
    set_temp_variable = { temp_array_3^2 = 1 }

    # Run checks
    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { bitwise_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = {
                check_variable = { temp_array_2^num = 4 }
            }
        }
        set_temp_variable = { invalid = 1 }
    }
    for_loop_effect = {
        start = 0
        end = 32
        compare = less_than
        value = idx

        if = {
            limit = {
                NOT = { check_variable = { temp_array_2^idx = temp_array_3^idx } }
            }
            set_temp_variable = { invalid = 1 }
        }
    }

    # Log result
    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - basic or_bitwise - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - basic or_bitwise - PASS"
    }
    set_temp_variable = { temp_array_id = 2 }
    log = "Actual: [debug_print_array_id]"
    set_temp_variable = { temp_array_id = 3 }
    log = "Expect: [debug_print_array_id]"
    
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
    clear_temp_array = temp_array_3
}
ieee_test_1005 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
    clear_temp_array = temp_array_3
    
    # Run function
    resize_temp_array = { temp_array_0 = 3 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    resize_temp_array = { temp_array_1 = 1 }
    add_to_temp_array = { temp_array_1 = 1 }
    add_to_temp_array = { temp_array_1 = 1 }
    add_to_temp_array = { temp_array_1 = 0 }
    add_to_temp_array = { temp_array_1 = 0 }

    set_temp_variable = { temp_array_a_id = 0 }
    set_temp_variable = { temp_array_b_id = 1 }
    set_temp_variable = { temp_array_a_offset = 3 }
    set_temp_variable = { temp_array_b_offset = 1 }
    set_temp_variable = { temp_array_output_id = 2 }
    or_bitwise = yes

    # Create expected array
    resize_temp_array = { temp_array_3 = 4 }
    set_temp_variable = { temp_array_3^0 = 1 }
    set_temp_variable = { temp_array_3^1 = 1 }
    set_temp_variable = { temp_array_3^2 = 1 }

    # Run checks
    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { bitwise_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = {
                check_variable = { temp_array_2^num = 4 }
            }
        }
        set_temp_variable = { invalid = 1 }
    }
    for_loop_effect = {
        start = 0
        end = 32
        compare = less_than
        value = idx

        if = {
            limit = {
                NOT = { check_variable = { temp_array_2^idx = temp_array_3^idx } }
            }
            set_temp_variable = { invalid = 1 }
        }
    }

    # Log result
    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - offset or_bitwise - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - offset or_bitwise - PASS"
    }
    set_temp_variable = { temp_array_id = 2 }
    log = "Actual: [debug_print_array_id]"
    set_temp_variable = { temp_array_id = 3 }
    log = "Expect: [debug_print_array_id]"
    
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
    clear_temp_array = temp_array_3
}
ieee_test_1006 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
    
    # Run function
    resize_temp_array = { temp_array_0 = 6 }
    resize_temp_array = { temp_array_1 = 1 }

    set_temp_variable = { temp_array_a_id = 2 }
    set_temp_variable = { temp_array_b_id = 1.001 }
    set_temp_variable = { temp_array_a_offset = 2 }
    set_temp_variable = { temp_array_b_offset = 3 }
    set_temp_variable = { temp_array_output_id = 2 }
    or_bitwise = yes

    # Run checks
    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            NOT = { check_variable = { bitwise_error_flag = 4 } }
        }
        set_temp_variable = { invalid = 1 }
    }

    # Log result
    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - errors or_bitwise - FAIL"
        log = "Expected 4 errors, got [?bitwise_error_flag]"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - errors or_bitwise - PASS"
    }

    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
}
ieee_test_1007 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
    
    # Run function
    resize_temp_array = { temp_array_0 = 6 }
    resize_temp_array = { temp_array_1 = 6 }

    set_temp_variable = { temp_array_a_id = 0 }
    set_temp_variable = { temp_array_b_id = 1 }
    set_temp_variable = { temp_array_a_offset = 0 }
    set_temp_variable = { temp_array_b_offset = 0 }
    set_temp_variable = { temp_array_output_id = 2 }
    add_to_temp_array = { temp_array_0 = 2 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_1 = 1 }
    add_to_temp_array = { temp_array_1 = -1 }
    or_bitwise = yes

    # Run checks
    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            NOT = { check_variable = { bitwise_error_flag = 2 } }
        }
        set_temp_variable = { invalid = 1 }
    }

    # Log result
    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - value errors or_bitwise - FAIL"
        log = "Expected 2 errors, got [?bitwise_error_flag]"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - errors or_bitwise - PASS"
    }

    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
}
ieee_test_1008 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
    clear_temp_array = temp_array_3
    
    # Run function
    resize_temp_array = { temp_array_0 = 4 }
    set_temp_variable = { temp_array_0^0 = 1 }
    set_temp_variable = { temp_array_0^1 = 1 }
    resize_temp_array = { temp_array_1 = 4 }
    set_temp_variable = { temp_array_1^0 = 1 }
    set_temp_variable = { temp_array_1^2 = 1 }

    set_temp_variable = { temp_array_a_id = 0 }
    set_temp_variable = { temp_array_b_id = 1 }
    set_temp_variable = { temp_array_output_id = 2 }
    xor_bitwise = yes

    # Create expected array
    resize_temp_array = { temp_array_3 = 4 }
    set_temp_variable = { temp_array_3^1 = 1 }
    set_temp_variable = { temp_array_3^2 = 1 }

    # Run checks
    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { bitwise_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = {
                check_variable = { temp_array_2^num = 4 }
            }
        }
        set_temp_variable = { invalid = 1 }
    }
    for_loop_effect = {
        start = 0
        end = 32
        compare = less_than
        value = idx

        if = {
            limit = {
                NOT = { check_variable = { temp_array_2^idx = temp_array_3^idx } }
            }
            set_temp_variable = { invalid = 1 }
        }
    }

    # Log result
    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - basic xor_bitwise - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - basic xor_bitwise - PASS"
    }
    set_temp_variable = { temp_array_id = 2 }
    log = "Actual: [debug_print_array_id]"
    set_temp_variable = { temp_array_id = 3 }
    log = "Expect: [debug_print_array_id]"
    
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
    clear_temp_array = temp_array_3
}
ieee_test_1009 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
    clear_temp_array = temp_array_3
    
    # Run function
    resize_temp_array = { temp_array_0 = 3 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    resize_temp_array = { temp_array_1 = 1 }
    add_to_temp_array = { temp_array_1 = 1 }
    add_to_temp_array = { temp_array_1 = 1 }
    add_to_temp_array = { temp_array_1 = 0 }
    add_to_temp_array = { temp_array_1 = 0 }

    set_temp_variable = { temp_array_a_id = 0 }
    set_temp_variable = { temp_array_b_id = 1 }
    set_temp_variable = { temp_array_a_offset = 3 }
    set_temp_variable = { temp_array_b_offset = 1 }
    set_temp_variable = { temp_array_output_id = 2 }
    xor_bitwise = yes

    # Create expected array
    resize_temp_array = { temp_array_3 = 4 }
    set_temp_variable = { temp_array_3^1 = 1 }
    set_temp_variable = { temp_array_3^2 = 1 }

    # Run checks
    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { bitwise_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = {
                check_variable = { temp_array_2^num = 4 }
            }
        }
        set_temp_variable = { invalid = 1 }
    }
    for_loop_effect = {
        start = 0
        end = 32
        compare = less_than
        value = idx

        if = {
            limit = {
                NOT = { check_variable = { temp_array_2^idx = temp_array_3^idx } }
            }
            set_temp_variable = { invalid = 1 }
        }
    }

    # Log result
    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - offset xor_bitwise - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - offset xor_bitwise - PASS"
    }
    set_temp_variable = { temp_array_id = 2 }
    log = "Actual: [debug_print_array_id]"
    set_temp_variable = { temp_array_id = 3 }
    log = "Expect: [debug_print_array_id]"
    
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
    clear_temp_array = temp_array_3
}
ieee_test_1010 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
    
    # Run function
    resize_temp_array = { temp_array_0 = 7 }
    resize_temp_array = { temp_array_1 = 2 }

    set_temp_variable = { temp_array_a_id = 2 }
    set_temp_variable = { temp_array_b_id = 1.001 }
    set_temp_variable = { temp_array_a_offset = 2 }
    set_temp_variable = { temp_array_b_offset = 3 }
    set_temp_variable = { temp_array_output_id = 2 }
    xor_bitwise = yes

    # Run checks
    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            NOT = { check_variable = { bitwise_error_flag = 4 } }
        }
        set_temp_variable = { invalid = 1 }
    }

    # Log result
    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - errors xor_bitwise - FAIL"
        log = "Expected 4 errors, got [?bitwise_error_flag]"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - errors xor_bitwise - PASS"
    }

    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
}
ieee_test_1011 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
    
    # Run function
    resize_temp_array = { temp_array_0 = 6 }
    resize_temp_array = { temp_array_1 = 6 }

    set_temp_variable = { temp_array_a_id = 0 }
    set_temp_variable = { temp_array_b_id = 1 }
    set_temp_variable = { temp_array_a_offset = 0 }
    set_temp_variable = { temp_array_b_offset = 0 }
    set_temp_variable = { temp_array_output_id = 2 }
    add_to_temp_array = { temp_array_0 = 2 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_1 = 1 }
    add_to_temp_array = { temp_array_1 = -1 }
    xor_bitwise = yes

    # Run checks
    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            NOT = { check_variable = { bitwise_error_flag = 2 } }
        }
        set_temp_variable = { invalid = 1 }
    }

    # Log result
    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - value errors xor_bitwise - FAIL"
        log = "Expected 2 errors, got [?bitwise_error_flag]"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - errors xor_bitwise - PASS"
    }

    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
}
ieee_test_1012 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
    
    # Run function
    resize_temp_array = { temp_array_0 = 4 }
    set_temp_variable = { temp_array_0^0 = 1 }
    set_temp_variable = { temp_array_0^1 = 1 }

    set_temp_variable = { temp_array_id = 0 }
    set_temp_variable = { temp_array_output_id = 1 }
    not_bitwise = yes

    # Create expected array
    resize_temp_array = { temp_array_2 = 4 }
    set_temp_variable = { temp_array_2^2 = 1 }
    set_temp_variable = { temp_array_2^3 = 1 }

    # Run checks
    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { bitwise_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = {
                check_variable = { temp_array_2^num = 4 }
            }
        }
        set_temp_variable = { invalid = 1 }
    }
    for_loop_effect = {
        start = 0
        end = 32
        compare = less_than
        value = idx

        if = {
            limit = {
                NOT = { check_variable = { temp_array_1^idx = temp_array_2^idx } }
            }
            set_temp_variable = { invalid = 1 }
        }
    }

    # Log result
    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - basic not_bitwise - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - basic not_bitwise - PASS"
    }
    set_temp_variable = { temp_array_id = 1 }
    log = "Actual: [debug_print_array_id]"
    set_temp_variable = { temp_array_id = 2 }
    log = "Expect: [debug_print_array_id]"
    
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
}
ieee_test_1013 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    
    # Run function
    resize_temp_array = { temp_array_0 = 4 }
    set_temp_variable = { temp_array_0^0 = 1 }
    set_temp_variable = { temp_array_0^1 = 1 }

    set_temp_variable = { temp_array_id = 1.001 }
    set_temp_variable = { temp_array_output_id = 1.001 }
    not_bitwise = yes

    # Run checks
    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            NOT = { check_variable = { bitwise_error_flag = 2 } }
        }
        set_temp_variable = { invalid = 1 }
    }

    # Log result
    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - errors not_bitwise - FAIL"
        log = "Expected 2 errors, got [?bitwise_error_flag]"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - errors not_bitwise - PASS"
    }

    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
}
ieee_test_1014 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    
    # Run function
    resize_temp_array = { temp_array_0 = 4 }
    set_temp_variable = { temp_array_0^0 = 1 }
    set_temp_variable = { temp_array_0^1 = 1 }
    add_to_temp_array = { temp_array_0 = -1 }
    add_to_temp_array = { temp_array_0 = 2 }

    set_temp_variable = { temp_array_id = 0 }
    set_temp_variable = { temp_array_output_id = 1 }
    not_bitwise = yes

    # Run checks
    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            NOT = { check_variable = { bitwise_error_flag = 2 } }
        }
        set_temp_variable = { invalid = 1 }
    }

    # Log result
    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - value errors not_bitwise - FAIL"
        log = "Expected 2 errors, got [?bitwise_error_flag]"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - value errors not_bitwise - PASS"
    }

    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
}
## test array manip functions
ieee_test_2000 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
    clear_temp_array = temp_array_3

    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 2 }
    add_to_temp_array = { temp_array_0 = 3 }
    add_to_temp_array = { temp_array_0 = 4 }
    add_to_temp_array = { temp_array_1 = 1 }
    add_to_temp_array = { temp_array_1 = 2 }
    add_to_temp_array = { temp_array_1 = 3 }

    add_to_temp_array = { temp_array_3 = 1 }
    add_to_temp_array = { temp_array_3 = 2 }
    add_to_temp_array = { temp_array_3 = 3 }
    add_to_temp_array = { temp_array_3 = 4 }
    add_to_temp_array = { temp_array_3 = 1 }
    add_to_temp_array = { temp_array_3 = 2 }
    add_to_temp_array = { temp_array_3 = 3 }

    set_temp_variable = { temp_array_a_id = 0 }
    set_temp_variable = { temp_array_b_id = 1 }
    set_temp_variable = { temp_array_output_id = 2 }
    append_array = yes

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { bitwise_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = {
                check_variable = { temp_array_2^num = temp_array_3^num }
            }
        }
        set_temp_variable = { invalid = 1 } 
    }
    for_loop_effect = {
        start = 0
        end = temp_array_3^num
        compare = less_than
        value = idx

        if = {
            limit = {
                NOT = { check_variable = { temp_array_2^idx = temp_array_3^idx } }
            }
            set_temp_variable = { invalid = 1 }
        }
    }

    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - basic append_array - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - basic append_array - PASS"
    }
    set_temp_variable = { temp_array_id = 2 }
    log = "Actual: [debug_print_array_id]"
    set_temp_variable = { temp_array_id = 3 }
    log = "Expect: [debug_print_array_id]"
    
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
    clear_temp_array = temp_array_3
}
ieee_test_2001 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
    clear_temp_array = temp_array_3

    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 2 }
    add_to_temp_array = { temp_array_0 = 3 }
    add_to_temp_array = { temp_array_0 = 4 }
    add_to_temp_array = { temp_array_1 = 1 }
    add_to_temp_array = { temp_array_1 = 2 }
    add_to_temp_array = { temp_array_1 = 3 }

    add_to_temp_array = { temp_array_3 = 4 }
    add_to_temp_array = { temp_array_3 = 2 }
    add_to_temp_array = { temp_array_3 = 3 }

    set_temp_variable = { temp_array_a_id = 0 }
    set_temp_variable = { temp_array_a_offset = 3 }
    set_temp_variable = { temp_array_b_id = 1 }
    set_temp_variable = { temp_array_b_offset = 1 }
    set_temp_variable = { temp_array_output_id = 2 }
    append_array = yes

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { bitwise_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = {
                check_variable = { temp_array_2^num = temp_array_3^num }
            }
        }
        set_temp_variable = { invalid = 1 } 
    }
    for_loop_effect = {
        start = 0
        end = temp_array_3^num
        compare = less_than
        value = idx

        if = {
            limit = {
                NOT = { check_variable = { temp_array_2^idx = temp_array_3^idx } }
            }
            set_temp_variable = { invalid = 1 }
        }
    }

    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - offset append_array - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - offset append_array - PASS"
    }
    set_temp_variable = { temp_array_id = 2 }
    log = "Actual: [debug_print_array_id]"
    set_temp_variable = { temp_array_id = 3 }
    log = "Expect: [debug_print_array_id]"
    
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
    clear_temp_array = temp_array_3
}
ieee_test_2002 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2

    set_temp_variable = { temp_array_a_id = 1 }
    set_temp_variable = { temp_array_a_offset = 3 }
    set_temp_variable = { temp_array_b_id = 1.01 }
    set_temp_variable = { temp_array_b_offset = -1 }
    set_temp_variable = { temp_array_output_id = 1 }
    append_array = yes

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            NOT = { check_variable = { bitwise_error_flag = 3 } }
        }
        set_temp_variable = { invalid = 1 }
    }

    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - errors append_array - FAIL"
        log = "Expected 2 errors, got [?bitwise_error_flag]"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - errors append_array - PASS"
    }
    
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
}
ieee_test_2003 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2

    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 2 }
    add_to_temp_array = { temp_array_0 = 3 }
    add_to_temp_array = { temp_array_0 = 4 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 2 }
    add_to_temp_array = { temp_array_0 = 3 }

    add_to_temp_array = { temp_array_2 = 1 }
    add_to_temp_array = { temp_array_2 = 2 }
    add_to_temp_array = { temp_array_2 = 3 }
    add_to_temp_array = { temp_array_2 = 4 }
    add_to_temp_array = { temp_array_2 = 1 }
    add_to_temp_array = { temp_array_2 = 2 }
    add_to_temp_array = { temp_array_2 = 3 }

    set_temp_variable = { temp_array_id = 0 }
    set_temp_variable = { temp_array_output_id = 1 }
    copy_array = yes

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { bitwise_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = {
                check_variable = { temp_array_1^num = temp_array_2^num }
            }
        }
        set_temp_variable = { invalid = 1 } 
    }
    for_loop_effect = {
        start = 0
        end = temp_array_2^num
        compare = less_than
        value = idx

        if = {
            limit = {
                NOT = { check_variable = { temp_array_1^idx = temp_array_2^idx } }
            }
            set_temp_variable = { invalid = 1 }
        }
    }

    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - basic copy_array - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - basic copy_array - PASS"
    }
    set_temp_variable = { temp_array_id = 1 }
    log = "Actual: [debug_print_array_id]"
    set_temp_variable = { temp_array_id = 2 }
    log = "Expect: [debug_print_array_id]"
    
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
}
ieee_test_2004 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2

    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 2 }
    add_to_temp_array = { temp_array_0 = 3 }
    add_to_temp_array = { temp_array_0 = 4 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 2 }
    add_to_temp_array = { temp_array_0 = 3 }

    add_to_temp_array = { temp_array_2 = 2 }
    add_to_temp_array = { temp_array_2 = 3 }
    add_to_temp_array = { temp_array_2 = 4 }
    add_to_temp_array = { temp_array_2 = 1 }
    add_to_temp_array = { temp_array_2 = 2 }

    set_temp_variable = { temp_array_id = 0 }
    set_temp_variable = { temp_array_start = 1 }
    set_temp_variable = { temp_array_end = temp_array_0^num }
    subtract_from_temp_variable = { temp_array_end = 1 }
    set_temp_variable = { temp_array_output_id = 1 }
    copy_array = yes

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { bitwise_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = {
                check_variable = { temp_array_1^num = temp_array_2^num }
            }
        }
        set_temp_variable = { invalid = 1 } 
    }
    for_loop_effect = {
        start = 0
        end = temp_array_2^num
        compare = less_than
        value = idx

        if = {
            limit = {
                NOT = { check_variable = { temp_array_1^idx = temp_array_2^idx } }
            }
            set_temp_variable = { invalid = 1 }
        }
    }

    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - start/end copy_array - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - start/end copy_array - PASS"
    }
    set_temp_variable = { temp_array_id = 1 }
    log = "Actual: [debug_print_array_id]"
    set_temp_variable = { temp_array_id = 2 }
    log = "Expect: [debug_print_array_id]"
    
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
}
ieee_test_2005 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2

    set_temp_variable = { temp_array_id = 1.01 }
    set_temp_variable = { temp_array_start = -1 }
    set_temp_variable = { temp_array_end = 12 }
    set_temp_variable = { temp_array_output_id = 1.01 }
    copy_array = yes

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            NOT = { check_variable = { bitwise_error_flag = 3 } }
        }
        set_temp_variable = { invalid = 1 }
    }

    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - errors append_array - FAIL"
        log = "Expected 2 errors, got [?bitwise_error_flag]"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - errors append_array - PASS"
    }
    
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
}
ieee_test_2006 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2

    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 2 }
    add_to_temp_array = { temp_array_0 = 3 }
    add_to_temp_array = { temp_array_0 = 4 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 2 }
    add_to_temp_array = { temp_array_0 = 3 }

    add_to_temp_array = { temp_array_2 = 3 }
    add_to_temp_array = { temp_array_2 = 2 }
    add_to_temp_array = { temp_array_2 = 1 }
    add_to_temp_array = { temp_array_2 = 4 }
    add_to_temp_array = { temp_array_2 = 3 }
    add_to_temp_array = { temp_array_2 = 2 }
    add_to_temp_array = { temp_array_2 = 1 }

    set_temp_variable = { temp_array_id = 0 }
    set_temp_variable = { temp_array_output_id = 1 }
    reverse_array = yes

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { bitwise_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = {
                check_variable = { temp_array_1^num = temp_array_2^num }
            }
        }
        set_temp_variable = { invalid = 1 } 
    }
    for_loop_effect = {
        start = 0
        end = temp_array_2^num
        compare = less_than
        value = idx

        if = {
            limit = {
                NOT = { check_variable = { temp_array_1^idx = temp_array_2^idx } }
            }
            set_temp_variable = { invalid = 1 }
        }
    }

    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - basic reverse_array - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - basic reverse_array - PASS"
    }
    set_temp_variable = { temp_array_id = 1 }
    log = "Actual: [debug_print_array_id]"
    set_temp_variable = { temp_array_id = 2 }
    log = "Expect: [debug_print_array_id]"
    
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
}
ieee_test_2007 = {
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2

    set_temp_variable = { temp_array_id = 1.01 }
    set_temp_variable = { temp_array_output_id = 1.01 }
    reverse_array = yes

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            NOT = { check_variable = { bitwise_error_flag = 2 } }
        }
        set_temp_variable = { invalid = 1 }
    }

    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - errors reverse_array - FAIL"
        log = "Expected 2 errors, got [?bitwise_error_flag]"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - errors reverse_array - PASS"
    }
    
    set_temp_variable = { bitwise_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
    clear_temp_array = temp_array_2
}
## test to_float
ieee_test_3000 = {
    set_temp_variable = { io_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1

    set_temp_variable = { to_float_input = 1175 }
    set_temp_variable = { temp_array_id = 1 }
    to_float = yes
    
    clear_temp_array = temp_array_0
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { io_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = {
                check_variable = { temp_array_0^num = temp_array_1^num }
            }
        }
        set_temp_variable = { invalid = 1 } 
    }
    for_loop_effect = {
        start = 0
        end = temp_array_1^num
        compare = less_than
        value = idx

        if = {
            limit = {
                NOT = { check_variable = { temp_array_0^idx = temp_array_1^idx } }
            }
            set_temp_variable = { invalid = 1 }
        }
    }
    
    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - basic to_float - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - basic to_float - PASS"
    }
    set_temp_variable = { temp_array_id = 1 }
    log = "Actual: [debug_print_array_id]"
    set_temp_variable = { temp_array_id = 0 }
    log = "Expect: [debug_print_array_id]"

    set_temp_variable = { io_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
}
ieee_test_3001 = {
    set_temp_variable = { io_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1

    set_temp_variable = { to_float_input = 2097152.874 }
    set_temp_variable = { temp_array_id = 1 }
    to_float = yes
    
    clear_temp_array = temp_array_0
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 1 }

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { io_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = {
                check_variable = { temp_array_0^num = temp_array_1^num }
            }
        }
        set_temp_variable = { invalid = 1 } 
    }
    for_loop_effect = {
        start = 0
        end = temp_array_2^num
        compare = less_than
        value = idx

        if = {
            limit = {
                NOT = { check_variable = { temp_array_0^idx = temp_array_1^idx } }
            }
            set_temp_variable = { invalid = 1 }
        }
    }
    
    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - round down to_float - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - round down to_float - PASS"
    }
    set_temp_variable = { temp_array_id = 1 }
    log = "Actual: [debug_print_array_id]"
    set_temp_variable = { temp_array_id = 0 }
    log = "Expect: [debug_print_array_id]"

    set_temp_variable = { io_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
}
ieee_test_3002 = {
    set_temp_variable = { io_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1

    set_temp_variable = { to_float_input = 2097152.875 }
    set_temp_variable = { temp_array_id = 1 }
    to_float = yes
    
    clear_temp_array = temp_array_0
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { io_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = {
                check_variable = { temp_array_0^num = temp_array_1^num }
            }
        }
        set_temp_variable = { invalid = 1 } 
    }
    for_loop_effect = {
        start = 0
        end = temp_array_2^num
        compare = less_than
        value = idx

        if = {
            limit = {
                NOT = { check_variable = { temp_array_0^idx = temp_array_1^idx } }
            }
            set_temp_variable = { invalid = 1 }
        }
    }
    
    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - round up, edge to_float - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - round up, edge to_float - PASS"
    }
    set_temp_variable = { temp_array_id = 1 }
    log = "Actual: [debug_print_array_id]"
    set_temp_variable = { temp_array_id = 0 }
    log = "Expect: [debug_print_array_id]"

    set_temp_variable = { io_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
}
ieee_test_3003 = {
    set_temp_variable = { io_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1

    set_temp_variable = { to_float_input = 2097152.125 }
    set_temp_variable = { temp_array_id = 1 }
    to_float = yes
    
    clear_temp_array = temp_array_0
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { io_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = {
                check_variable = { temp_array_0^num = temp_array_1^num }
            }
        }
        set_temp_variable = { invalid = 1 } 
    }
    for_loop_effect = {
        start = 0
        end = temp_array_2^num
        compare = less_than
        value = idx

        if = {
            limit = {
                NOT = { check_variable = { temp_array_0^idx = temp_array_1^idx } }
            }
            set_temp_variable = { invalid = 1 }
        }
    }
    
    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - round down, edge to_float - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - round down, edge to_float - PASS"
    }
    set_temp_variable = { temp_array_id = 1 }
    log = "Actual: [debug_print_array_id]"
    set_temp_variable = { temp_array_id = 0 }
    log = "Expect: [debug_print_array_id]"

    set_temp_variable = { io_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
}
ieee_test_3004 = {
    set_temp_variable = { io_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1

    set_temp_variable = { to_float_input = 2097152.876 }
    set_temp_variable = { temp_array_id = 1 }
    to_float = yes
    
    clear_temp_array = temp_array_0
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { io_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = {
                check_variable = { temp_array_0^num = temp_array_1^num }
            }
        }
        set_temp_variable = { invalid = 1 } 
    }
    for_loop_effect = {
        start = 0
        end = temp_array_2^num
        compare = less_than
        value = idx

        if = {
            limit = {
                NOT = { check_variable = { temp_array_0^idx = temp_array_1^idx } }
            }
            set_temp_variable = { invalid = 1 }
        }
    }
    
    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - round up to_float - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - round up to_float - PASS"
    }
    set_temp_variable = { temp_array_id = 1 }
    log = "Actual: [debug_print_array_id]"
    set_temp_variable = { temp_array_id = 0 }
    log = "Expect: [debug_print_array_id]"

    set_temp_variable = { io_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
}
ieee_test_3005 = {
    set_temp_variable = { io_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1

    set_temp_variable = { to_float_input = -2525.125 }
    set_temp_variable = { temp_array_id = 1 }
    to_float = yes
    
    clear_temp_array = temp_array_0
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { io_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = {
                check_variable = { temp_array_0^num = temp_array_1^num }
            }
        }
        set_temp_variable = { invalid = 1 } 
    }
    for_loop_effect = {
        start = 0
        end = temp_array_2^num
        compare = less_than
        value = idx

        if = {
            limit = {
                NOT = { check_variable = { temp_array_0^idx = temp_array_1^idx } }
            }
            set_temp_variable = { invalid = 1 }
        }
    }
    
    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - negative to_float - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - negative to_float - PASS"
    }
    set_temp_variable = { temp_array_id = 1 }
    log = "Actual: [debug_print_array_id]"
    set_temp_variable = { temp_array_id = 0 }
    log = "Expect: [debug_print_array_id]"

    set_temp_variable = { io_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
}
ieee_test_3006 = {
    set_temp_variable = { io_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1

    set_temp_variable = { to_float_input = 0 }
    set_temp_variable = { temp_array_id = 1 }
    to_float = yes
    
    clear_temp_array = temp_array_0
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { io_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = {
                check_variable = { temp_array_0^num = temp_array_1^num }
            }
        }
        set_temp_variable = { invalid = 1 } 
    }
    for_loop_effect = {
        start = 0
        end = temp_array_2^num
        compare = less_than
        value = idx

        if = {
            limit = {
                NOT = { check_variable = { temp_array_0^idx = temp_array_1^idx } }
            }
            set_temp_variable = { invalid = 1 }
        }
    }
    
    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - basic to_float - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - basic to_float - PASS"
    }
    set_temp_variable = { temp_array_id = 1 }
    log = "Actual: [debug_print_array_id]"
    set_temp_variable = { temp_array_id = 0 }
    log = "Expect: [debug_print_array_id]"

    set_temp_variable = { io_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
}
ieee_test_3007 = {
    set_temp_variable = { io_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1

    set_temp_variable = { to_float_input = -2147483.648 }
    set_temp_variable = { temp_array_id = 1 }
    to_float = yes
    
    clear_temp_array = temp_array_0
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 0 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 1 }
    add_to_temp_array = { temp_array_0 = 1 }

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { io_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = {
                check_variable = { temp_array_0^num = temp_array_1^num }
            }
        }
        set_temp_variable = { invalid = 1 } 
    }
    for_loop_effect = {
        start = 0
        end = temp_array_2^num
        compare = less_than
        value = idx

        if = {
            limit = {
                NOT = { check_variable = { temp_array_0^idx = temp_array_1^idx } }
            }
            set_temp_variable = { invalid = 1 }
        }
    }
    
    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - min num to_float - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - min num to_float - PASS"
    }
    set_temp_variable = { temp_array_id = 1 }
    log = "Actual: [debug_print_array_id]"
    set_temp_variable = { temp_array_id = 0 }
    log = "Expect: [debug_print_array_id]"

    set_temp_variable = { io_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
}
ieee_test_3008 = {
    set_temp_variable = { io_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1

    set_temp_variable = { to_float_input = 123213 }
    set_temp_variable = { temp_array_id = 1.01 }
    to_float = yes

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            NOT = { check_variable = { io_error_flag = 1 } }
        }
        set_temp_variable = { invalid = 1 }
    }

    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - error to_float - FAIL"
        log = "Expected 1 error, got [?io_error_flag]"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - errors reverse_array - PASS"
    }
    
    set_temp_variable = { io_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
}
ieee_test_3009 = {
    set_temp_variable = { io_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1

    set_temp_variable = { to_float_input = 973801.56 }
    set_temp_variable = { temp_array_id = 1 }
    to_float = yes
    
    set_temp_variable = { temp_array_id = 1 }
    store_bitwise = yes

    # expected value from test
    set_temp_variable = { test_expectation = 1231928.985 }

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { io_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = { check_variable = { store_bitwise_output = test_expectation } }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - to_float -> store_bitwise - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - to_float -> store_bitwise - PASS"
    }
    set_temp_variable = { temp_array_id = 1 }
    log = "Actual: [?store_bitwise_output]"
    set_temp_variable = { temp_array_id = 0 }
    log = "Expect: [?test_expectation]"

    set_temp_variable = { io_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
}
ieee_test_3010 = {
    set_temp_variable = { io_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1

    set_temp_variable = { to_float_input = -1580679.665 }
    set_temp_variable = { temp_array_id = 1 }
    to_float = yes
    
    set_temp_variable = { temp_array_id = 1 }
    store_bitwise = yes

    # expected value from test
    set_temp_variable = { test_expectation = -910101.443 }

    set_temp_variable = { invalid = 0 }
    if = {
        limit = {
            check_variable = { io_error_flag > 0 }
        }
        set_temp_variable = { invalid = 1 }
    }
    if = {
        limit = {
            NOT = { check_variable = { store_bitwise_output = test_expectation } }
        }
        set_temp_variable = { invalid = 1 }
    }
    
    if = {
        limit = {
            check_variable = { invalid = 1 }
        }
        log = "Test [?test_id] - negative to_float -> store_bitwise - FAIL"
        add_to_temp_array = { test_fail_array = test_id }
    }
    else = {
        log = "Test [?test_id] - negative to_float -> store_bitwise - PASS"
    }
    set_temp_variable = { temp_array_id = 1 }
    log = "Actual: [?store_bitwise_output]"
    set_temp_variable = { temp_array_id = 0 }
    log = "Expect: [?test_expectation]"

    set_temp_variable = { io_error_flag = 0 }
    clear_temp_array = temp_array_0
    clear_temp_array = temp_array_1
}